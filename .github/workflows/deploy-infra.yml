name: Build & Deploy to ECS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  CFN_STACK_NAME: anythingllm-stack
  CFN_TEMPLATE: ./cloud-deployments/aws/cloudformation/ecs_anythingllm.json

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code & infra
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push AnythingLLM image
        id: build-image
        run: |
          TAG=${GITHUB_SHA::8}
          docker build -f ./docker/Dockerfile -t $ECR_REPOSITORY:$TAG .
          docker push $ECR_REPOSITORY:$TAG
          echo "image_uri=$ECR_REPOSITORY:$TAG" >> $GITHUB_OUTPUT

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name ${{ env.CFN_STACK_NAME }} \
            --template-file ${{ env.CFN_TEMPLATE }} \
            --parameter-overrides \
              ClusterName=anythingllm-cluster \
              ImageUri=${{ steps.build-image.outputs.image_uri }} \
              MilvusImageUri=milvusdb/milvus:latest \
              VpcId=vpc-0cca77c79f4c8a21c \
              SubnetIds=subnet-04df9c2220b4c5319,subnet-0494357a10fa150f7,subnet-004a06e624edaf31a \
              CertificateArn=${{ secrets.CERTIFICATE_ARN }} \
              DesiredCount=1 \
              ParameterPrefix=anythingllm/config \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --region ${{ env.AWS_REGION }}4