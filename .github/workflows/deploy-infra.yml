name: Build & Deploy with CloudFormation

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}                         # e.g. us-east-2
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}                 # e.g. 051826724302.dkr.ecr.us-east-2.amazonaws.com/layerone/allm
  CFN_STACK_NAME: anythingllm-stack
  CFN_TEMPLATE: ./cloud-deployments/aws/cloudformation/cloudformation_create_anythingllm.json

permissions:
  contents: read
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code & infra
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume:   ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region:       ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker image
        id: build-image
        run: |
          TAG=${GITHUB_SHA::8}
          docker build \
            -f ./docker/Dockerfile \
            -t $ECR_REPOSITORY:$TAG \
            .
          docker push $ECR_REPOSITORY:$TAG
          echo "image_uri=$ECR_REPOSITORY:$TAG" >> $GITHUB_OUTPUT

      - name: Cleanup failed stack (if any)
        run: |
          set -e
          STATUS=$(aws cloudformation describe-stacks \
            --stack-name $CFN_STACK_NAME \
            --region $AWS_REGION \
            --query "Stacks[0].StackStatus" \
            --output text || echo "NONE")
          if [ "$STATUS" = "ROLLBACK_COMPLETE" ]; then
            echo "Found ROLLBACK_COMPLETE stack; deleting..."
            aws cloudformation delete-stack \
              --stack-name $CFN_STACK_NAME \
              --region $AWS_REGION
            aws cloudformation wait stack-delete-complete \
              --stack-name $CFN_STACK_NAME \
              --region $AWS_REGION
          else
            echo "No failed stack to clean up (status: $STATUS)."
          fi

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name $CFN_STACK_NAME \
            --template-file $CFN_TEMPLATE \
            --parameter-overrides ImageUri=${{ steps.build-image.outputs.image_uri }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --region $AWS_REGION